"""
Django settings for community_service project.

Generated by 'django-admin startproject' using Django 5.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os

# 项目根目录的绝对路径，使用 Path(__file__).resolve().parent.parent 计算得出，用于构建项目内的其他路径。
BASE_DIR = Path(__file__).resolve().parent.parent

# Django 的密钥，用于加密签名、会话等。这是一个安全敏感项，生产环境中不应该直接硬编码在代码中。
SECRET_KEY = 'django-insecure-(ztmu$^a1-_nu$-3+$p&^5-u8lzk6rogpybg^0a8z9chbbvdg!'

# 调试模式开关，设置为 True 表示开启调试模式，会显示详细的错误信息。生产环境应设为 False 。
DEBUG = True

# 允许访问该 Django 站点的主机/域名列表，当 DEBUG=False 时必须设置。目前为空列表，表示只允许本地访问。
ALLOWED_HOSTS = []


# INSTALLED_APPS : 项目中启用的 Django 应用列表，每个应用都是一个独立的模块，负责处理特定的功能。
INSTALLED_APPS = [
    'simpleui',
    'django.contrib.admin', # 管理后台
    'django.contrib.auth',  # 认证系统，包括用户、组、权限等。
    'django.contrib.contenttypes', # 内容类型框架，用于关联模型和权限。
    'django.contrib.sessions', # 会话框架，用于存储用户会话数据。
    'django.contrib.messages', # 消息框架，用于在视图之间传递消息。
    'django.contrib.staticfiles', # 静态文件框架，用于管理项目的静态文件（如 CSS、JavaScript、图像等）。
    'community_service', # 自定义应用，用于处理项目的业务逻辑。
]

# Django 的中间件列表，按顺序处理请求和响应：

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',  # 安全中间件，用于设置安全相关的 HTTP 头。
    'django.contrib.sessions.middleware.SessionMiddleware', # 会话中间件，用于处理用户会话。
    'django.middleware.common.CommonMiddleware', # 通用中间件，处理一些通用的请求和响应任务，如处理静态文件、处理重定向等。
    'django.middleware.csrf.CsrfViewMiddleware', # CSRF 中间件，用于处理跨站请求伪造保护。
    'django.contrib.auth.middleware.AuthenticationMiddleware', # 认证中间件，用于将用户与请求关联起来。
    'django.contrib.messages.middleware.MessageMiddleware', # 消息中间件，用于在视图之间传递消息。
    'django.middleware.clickjacking.XFrameOptionsMiddleware', # 点击劫持保护中间件，用于设置 X-Frame-Options 头。
]


# 指定根 URL 配置模块的路径，这里是 community_service.urls ，用于定义项目的 URL 路由。
ROOT_URLCONF = 'community_service.urls'

# 模板配置
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates', # 使用的模板引擎 
        'DIRS': [], # 模板查找目录列表
        'APP_DIRS': True, # 是否在应用的 templates 目录中查找模板
        'OPTIONS': { # 模板引擎的选项，包括上下文处理器
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# 指定 WSGI 应用的路径，用于部署，这里是 'community_service.wsgi.application'
WSGI_APPLICATION = 'community_service.wsgi.application'


# 数据库配置
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3', # 数据库引擎，这里是 SQLite 数据库
        'NAME': BASE_DIR / 'db.sqlite3', 
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

# 密码验证配置
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# 国际化配置
LANGUAGE_CODE = 'zh-hans'  # 语言代码，这里是英语（美国）

TIME_ZONE = 'Asia/Shanghai' # 时区，这里是东八区（中国上海）

USE_I18N = True # 是否启用国际化，设置为 True 表示启用

USE_TZ = True # 是否启用时区支持，设置为 True 表示启用

# 静态文件配置
STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

# 默认主键字段类型配置
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# 媒体文件配置
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# 配置 simpleui 主题
SIMPLEUI_DEFAULT_THEME = 'dark.css'

DEFAULT_JSON_DUMPS_PARAMS = {
    'ensure_ascii': False,
}
